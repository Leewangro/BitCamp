// 부동소수점 변수 - 단정도와 배정도
package step02;

import java.io.InputStream;

import java.util.*;


public class Exam05_2{
    public static void main(String[] args) {
      float f;
      double d;
      //부동소수점 리터럴 값 뒤에 f나 F를 붙이면
      //4바이트 크기의 부동소수점 값을 의미한다.
      //따라서 변수에 값을 넣기 전에
      //다음은 4바이트 크기의 부동소수점을 저장하는 값이다.
      //변수(메모리)에 값을 넣기 전에 
      //이미 리터럴 값이 4바이트 크기로 고정시키기 위해서
      //그 유효자리수를 넘어가는 값은 잘린다
      //그래서 d변수에 실제로 저장되는 값은 이미 4바이트 메모리에
      //저장될 수 있도록 잘린 값이 저장된다
      
      f=9876.9876f;
      d=9876.9876f;

      System.out.println(f);
      System.out.println(d);
      //주의
      //정수의 경우 리터럴을 표현할 때
      //그 크기를 넘어가면 컴파일 오류가 발생하지만
      //부동소수점은 리터럴의 크기가 메모리의 크기를 넘어갈때 컴파일 오류 대신
      //단지 값이 잘릴뿐이다.

      f=9876.9876f;
      //double 메모리에 리터럴 값을 넣을 때는
      //8바이트 부동소수점 리터럴을 넣어라
      //즉, 리터럴 뒤에 f나 F를 붙이지 말아라
      d=9876.9876;
    }
}

// 결론!
//-float 메모리에 값을 저장할 때는
//유효자릿수가 7자리 이하인 4바이트 부동소수점을 저장하라
//-double 메모리에 값을 저장할 때는
//유효자릿수가 15자리 이하인 8바이트 부동소수점을 저장하라



